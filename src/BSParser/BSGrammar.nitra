namespace BSParser
{
  syntax module BSGrammar
  {
    using PrettyPrint;
    using Outline;
    using TokenNames;
    using StandardSpanClasses;
    using Whitespaces;
    using Identifiers;

    [StartRule]
    syntax CompilationUnit = TopLevelDeclaration* !Any;

    [Identifier]
    token Identifier = !Keyword IdentifierBody;

    [Keyword]
    token Keyword = Name=KeywordToken !IdentifierPartCharacters;

    regex KeywordToken =   "echo" 
                         | "class";

    alias Name = Identifier;

    syntax TopLevelDeclaration
    {
        | Class                      = "class" sm Name inl TypeBody;
    }

    syntax TypeBody = outline_begin_before "{" inl ClassMemberDeclaration* d "}" ";"? nl outline_end_before;
    
    syntax ClassMemberDeclaration;
  }
}
