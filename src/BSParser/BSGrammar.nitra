namespace BSParser
{
  syntax module BSGrammar
  {
    using PrettyPrint;
    using Outline;
    using TokenNames;
    using StandardSpanClasses;
    using Whitespaces;
    using Identifiers;
    using Statements;

    [StartRule]
    syntax CompilationUnit = TopLevelDeclaration* !Any;

    [Identifier]
    token Identifier = !Keyword IdentifierBody;

    [Keyword]
    token Keyword = Name=KeywordToken !IdentifierPartCharacters;

    regex KeywordToken =   "echo" 
                         | "class" | "function";

    alias Name = Identifier;

    syntax TopLevelDeclaration
    {
        | Class                      = "class" sm Name inl TypeBody;
    }

    syntax TypeBody = outline_begin_before "{" inl ClassMemberDeclaration* d "}" ";"? nl outline_end_before;
    
    syntax ClassMemberDeclaration
    {
        | Function                  = Modifiers "function" FunctionHeader Body;
    }

    syntax FunctionHeader = sm Name "(" ")";

    syntax Body
    {
      | Block = nl outline_begin_before "{"  "}" ";"? nl outline_end_before;
      | Empty = ";" nl;
    }

    syntax Modifiers = Modifier*;

    syntax Modifier
    {
      | Public    = "public"sm;
    }
  }
}
